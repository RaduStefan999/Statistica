nr_infecte = SYS_Curatare(nr_infecte);
}
if (nr_infecte == 0)
{
return(1);
}
else
{
return(0);
}
}
SYS_MonteCarlo_10_zile=function(nr)
{
sum=0
for(i in 1:nr)
{
sum=sum+SYS_situation_10_zile()
}
return(sum/nr)
}
print(SYS_MonteCarlo_10_zile(500))
alfa=1-0.95
z=qnorm(alfa/2)
epsilon=0.01
p=0.706
N_min=(1/4)*(z/epsilon)^2
N_min
SYS_MonteCarlo_10_zile(N_min+1)
alfa=1-0.95
z=qnorm(alfa/2)
epsilon=0.01
p=0.706
N_min=(1/4)*(z/epsilon)^2
N_min
SYS_MonteCarlo_10_zile(N_min+1)
alfa=1-0.95
z=qnorm(alfa/2)
epsilon=0.01
p=0.706
N_min=(1/4)*(z/epsilon)^2
N_min
SYS_MonteCarlo_10_zile(N_min+1)
alfa=1-0.95
z=qnorm(alfa/2)
epsilon=0.01
p=0.706
N_min=(1/4)*(z/epsilon)^2
N_min
SYS_MonteCarlo_10_zile(N_min+1)
alfa=1-0.95
z=qnorm(alfa/2)
epsilon=0.01
p=0.706
N_min=(1/4)*(z/epsilon)^2
N_min
SYS_MonteCarlo_10_zile(N_min+1)
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
#C1 Problema celor n regine
FormatareUnRows=function(tabla,MarimeTabla)
{
Katelea=length(tabla)+1
UR=1:MarimeTabla
UR=UR[!UR %in% tabla]#eliminam randurile luate de alte regine
Lungime=length(tabla)
for(p in 1:Lungime)
{
dy_sus=tabla[p]+(Katelea-p)
dy_jos=tabla[p]-(Katelea-p)
UR=UR[! UR %in% c(dy_sus,dy_jos) ]
}
if(length(UR)!=1)
return(UR)
else
{
UR[2]=UR[1];
return(UR);
}
}
n=8
UnUsedRows=1:n
i=1
row=vector()
while(length(UnUsedRows)!=0)
{
r=sample(UnUsedRows,1)
row[i]=r
i=i+1
UnUsedRows=FormatareUnRows(row,n)
}
if(length(row)<n)
{print("Failure")}else
{
print("Am Reusit!!")
print(row)
}
